apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 31

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a"
        }
        externalNativeBuild {
            cmake {
                targets "viro_arcore"
                cppFlags "-std=c++14 -frtti -fcxx-exceptions"
            }
        }

        packagingOptions {
            pickFirst 'lib/armeabi-v7a/libarcore_sdk_c.so'
            pickFirst 'lib/arm64-v8a/libarcore_sdk_c.so'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:1.5.0"
}

// Extract the .so files (libviro_arcore.so) for each architecture and place them in the build/natives
// directory
task extractNativeLibraries() {
    doFirst {
        copy {
            from zipTree('build/outputs/aar/viroar-release.aar')
            into('build/natives')
            include 'jni/**/*'
        }
    }
}

// We have to add dependencies to Android tasks in this deferred way because these tasks
// are dynamically generated.
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.finalizedBy 'extractNativeLibraries'
    }
}

project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}
